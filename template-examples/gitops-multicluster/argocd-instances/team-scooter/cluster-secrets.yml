---
object-templates-raw: |
  ## create a template to use for the argo cluster secret config value
  {{- $secret_template := `
  {
    "bearerToken": "%s",
    "tlsClientConfig": {
      "insecure": true
    }
  }
  ` }}

  ## get a list of all policies that would be the root of this running.
  {{- $rootPolicies := (lookup "policy.open-cluster-management.io/v1" "Policy" "" "" "!policy.open-cluster-management.io/root-policy" "policy.name=multi-cluster-gitops-hub").items }}

  ## lets look through all of the managed clusters, and find the managedserviceaccount
  {{- range $mc := (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "").items }}
    {{- $msa_token := "" }}
    {{- $mc_name := (printf "scooter-msa-%s" $mc.metadata.name) }}
    {{- $msa := (lookup "authentication.open-cluster-management.io/v1alpha1" "ManagedServiceAccount" $mc.metadata.name  $mc_name) }}

    ## Add the argo cluster label to the rest of the ManagedCluster lables
    {{- $_ := set $mc.metadata.labels "argocd.argoproj.io/secret-type" "cluster" }}
    {{- $_ := set $mc.metadata.labels "argocd/app-team" "scooter" }}

    {{- if $msa }}
      {{- if ne (dig "status" "tokenSecretRef" "name" "NOTOKEN" $msa) "NOTOKEN" }}
        {{- $msa_token = ((lookup "v1" "Secret" $msa.metadata.namespace $msa.status.tokenSecretRef.name).data.token) | base64dec }}
      {{- end }}
      {{- range $rp := $rootPolicies }}
  - complianceType: musthave
    objectDefinition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: {{ $mc_name }}
        namespace: {{ $rp.metadata.namespace }}
        labels: '{{ $mc.metadata.labels | toRawJson | toLiteral }}'
      type: Opaque
      data:
        config: {{ (printf $secret_template $msa_token) | base64enc }}
        name: {{ $mc.metadata.name | base64enc }}
        server: {{ (index $mc.spec.managedClusterClientConfigs 0).url | base64enc }}
      {{- end }}
    {{- end }}
  {{- end }}
