---
object-templates-raw: |
  ## create a template to use for the argo cluster secret config value
  {{hub- $secret_template := `
  {
    "bearerToken": "%s",
    "tlsClientConfig": {
      "insecure": true
    }
  }
  ` hub}}

  ## lets look through all of the managed clusters, and find the managedserviceaccount
  {{hub- range $mc := (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "").items hub}}
    {{hub- $msa_token := "" hub}}
    {{hub- $mc_name := (printf "scooter-msa-%s" $mc.metadata.name) hub}}
    {{hub- $msa := (lookup "authentication.open-cluster-management.io/v1alpha1" "ManagedServiceAccount" $mc.metadata.name  $mc_name) hub}}

    ## Add the argo cluster label to the rest of the ManagedCluster lables
    {{hub- $_ := set $mc.metadata.labels "argocd.argoproj.io/secret-type" "cluster" hub}}

    {{hub- if $msa hub}}
      {{hub- if ne (dig "status" "tokenSecretRef" "name" "NOTOKEN" $msa) "NOTOKEN" hub}}
        {{hub- $msa_token = ((lookup "v1" "Secret" $msa.metadata.namespace $msa.status.tokenSecretRef.name).data.token) | base64dec hub}}
      {{hub- end hub}}
  - complianceType: musthave
    objectDefinition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: {{hub $mc_name hub}}
        namespace: argocd-team-scooter
        labels: '{{hub $mc.metadata.labels | toRawJson | toLiteral hub}}'
      type: Opaque
      data:
        config: {{hub (printf $secret_template $msa_token) | base64enc hub}}
        name: {{hub $mc.metadata.name | base64enc hub}}
        server: {{hub (index $mc.spec.managedClusterClientConfigs 0).url | base64enc hub}}
    {{hub- end hub}}
  {{hub- end hub}}
