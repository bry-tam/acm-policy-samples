object-templates-raw: |
  {{/* ##  Create a list of all expected deployments in open-cluster-management-observability ## */}}
  {{- $aapNamespace := "ansible-automation-platform"}}
  {{- $depList := list "aap-controller-task"
                        "aap-controller-web"
                        "aap-gateway"
  }}

  {{- $sSetList := list "aap-postgres-15"
                        "aap-redis"
  }}

  {{- $aap := index (lookup "aap.ansible.com/v1alpha1" "AnsibleAutomationPlatform" $aapNamespace "").items 0 }}
      
  {{- $edaDiabled := (dig "spec" "eda" "disabled" "false" $aap) }}
  {{- if not $edaDiabled }}
    {{- $depList = append $depList "aap-eda-activation-worker" }}
    {{- $depList = append $depList "aap-eda-api" }}
    {{- $depList = append $depList "aap-eda-default-worker" }}
    {{- $depList = append $depList "aap-eda-event-stream" }}
    {{- $depList = append $depList "aap-eda-scheduler" }}
  {{- end }}

  {{- $hubDiabled := (dig "spec" "hub" "disabled" "false" $aap) }}
  {{- if not $hubDiabled }}
    {{- $depList = append $depList "aap-hub-api" }}
    {{- $depList = append $depList "aap-hub-content" }}
    {{- $depList = append $depList "aap-hub-redis" }}
    {{- $depList = append $depList "aap-hub-web" }}
    {{- $depList = append $depList "aap-hub-worker" }}
  {{- end }}

  ## Create a CompilianceType objectDefinition for each deployment
  {{- range $depName := $depList }}
    {{- $dep := (lookup "apps/v1" "Deployment" $aapNamespace $depName) }}
  - complianceType: musthave
    objectDefinition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        namespace: {{ $aapNamespace }}
        name: {{ $dep.metadata.name }}
      status:
        replicas: {{ $dep.spec.replicas }}
        updatedReplicas: {{ $dep.spec.replicas }}
        readyReplicas: {{ $dep.spec.replicas }}
        availableReplicas: {{ $dep.spec.replicas }}
        conditions:
          - type: Available
            status: 'True'
  {{- end }}


  ## Create a CompilianceType objectDefinition for each statefulset
  {{- range $sSetName := $sSetList }}
    {{- $sSet := (lookup "apps/v1" "StatefulSet" $aapNamespace $sSetName) }}
  - complianceType: musthave
    objectDefinition:
      kind: StatefulSet
      apiVersion: apps/v1
      metadata:
        namespace: {{ $aapNamespace}}
        name: {{ $sSet.metadata.name }}
      status:
        observedGeneration: {{ $sSet.metadata.generation  }}
        availableReplicas: {{ $sSet.spec.replicas }}
        currentReplicas: {{ $sSet.spec.replicas }}
        updatedReplicas: {{ $sSet.spec.replicas }}
        replicas: {{ $sSet.spec.replicas }}
        collisionCount: 0
        readyReplicas: {{ $sSet.spec.replicas }}
  {{- end }}

  - complianceType: musthave
    objectDefinition:
      apiVersion: aap.ansible.com/v1alpha1
      kind: AnsibleAutomationPlatform
      metadata:
        name: {{ $aap.metadata.name }}
        namespace: {{ $aapNamespace }}
      status:
        conditions:
        {{- range $c := $aap.status.conditions }}
          {{- $_ := set $c "status" ((eq $c.type "Failure") | ternary "False" "True") }}
          - {{ $c | toRawJson | toLiteral }}
        {{- end }}